AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "SAM template for the DetektivKollektiv ML model deployment" # Change for each template

Description: Deploy a model at Sagemaker
Parameters:
  ImageRepoUri:
    Type: String
    Description: Uri of the docker (ECR) model image
    Default: "891514678401.dkr.ecr.eu-central-1.amazonaws.com/detektivkollektiv-ml-models:dev"
  ModelName:
    Type: String
    Description: Name of the model
    Default: "detektivkollektiv-ml-models"
  ModelsPrefix:
    Type: String
    Description: Prefix of models
    Default: dev
  MLOpsRoleArn:
    Type: String
    Description: The role for executing the deployment
    Default: "arn:aws:iam::891514678401:role/detektivkollektiv-ml-models-deploy-role-dev"
  ModelLocations:
    Type: String
    Description: Not required for stack, just for copying models to the correct location
    Default: '{"TopicalPageRank": "s3://sagemaker-eu-central-1-891514678401/TopicalPageRank/model/2ebdc638-4413-45c5-a0a1-156a05c7c8d9/output"}'
  Stage:
    Default: dev
    Description: stage (corresponding to branch)
    Type: String
  ModelId:
    Description: identifies default version of models
    Type: String
    Default: "2ebdc638-4413-45c5-a0a1-156a05c7c8d9"

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Stage
      Auth:
        DefaultAuthorizer: AWS_IAM
        AddDefaultAuthorizerToCorsPreflight: false
        InvokeRole: NONE

  Model:
    Type: "AWS::SageMaker::Model"
    Properties:
      ModelName: !Sub ${ModelName}-${Stage}
      PrimaryContainer:
        Image: !Ref ImageRepoUri
        ModelDataUrl: !Sub s3://${ModelName}/${ModelsPrefix}
        Mode: MultiModel
      ExecutionRoleArn: !Ref MLOpsRoleArn

  EndpointConfig:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1.0
          InstanceType: ml.t2.medium
          ModelName: !GetAtt Model.ModelName
          VariantName: AllTraffic
      EndpointConfigName: !Sub ${ModelName}-${Stage}
      Tags:
        - Key: Name
          Value: !Sub ${ModelName}-${Stage}

  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointName: !Sub ${ModelName}-${Stage}
      EndpointConfigName: !GetAtt EndpointConfig.EndpointConfigName
      Tags:
        - Key: Name
          Value: !Sub ${ModelName}-${Stage}

  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ModelName}-api-${Stage}
      CodeUri: .
      Handler: app.lambda_handler
      Runtime: python3.8
      Role: !GetAtt ApiFunctionRole.Arn
      Environment:
        Variables:
          ENDPOINT_NAME: !GetAtt Endpoint.EndpointName
          DEFAULT_ID: !Ref ModelId
      Events:
        Invoke:
          Type: Api
          Properties:
            Path: /models/{model_name}
            Method: post
            RestApiId:
              Ref: Api
    Description: "Api deployment that invokes SageMaker endpoint"

  ApiFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyDocument:
            Statement:
              - Sid: AllowSageMaker
                Effect: Allow
                Action:
                  - sagemaker:InvokeEndpoint
                Resource: !Sub "arn:aws:sagemaker:*:*:endpoint/${ModelName}-${Stage}"
            Version: "2012-10-17"
          PolicyName: SageMakerInvokeEndpoint
